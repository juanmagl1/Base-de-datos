--1
SELECT DISTINCT c.NOMBRE_CLIENTE , e.NOMBRE ,e.APELLIDO1 FROM CLIENTE c , EMPLEADO e
WHERE c.CODIGO_EMPLEADO_REP_VENTAS =e.CODIGO_EMPLEADO;
--2
SELECT DISTINCT c.NOMBRE_CLIENTE,e.NOMBRE FROM EMPLEADO e,CLIENTE c,PAGO p
WHERE e.CODIGO_EMPLEADO = c.CODIGO_EMPLEADO_REP_VENTAS 
AND c.CODIGO_CLIENTE = p.CODIGO_CLIENTE;

--3
SELECT DISTINCT c.NOMBRE_CLIENTE ,e.NOMBRE , e.APELLIDO1 FROM CLIENTE c,EMPLEADO e
WHERE c.CODIGO_EMPLEADO_REP_VENTAS = e.CODIGO_EMPLEADO
AND c.CODIGO_CLIENTE NOT IN (SELECT DISTINCT CODIGO_CLIENTE FROM pago);

--4
SELECT DISTINCT c.NOMBRE_CLIENTE,e.NOMBRE,o.CIUDAD FROM EMPLEADO e,CLIENTE c,PAGO p,OFICINA o
WHERE e.CODIGO_EMPLEADO = c.CODIGO_EMPLEADO_REP_VENTAS 
AND c.CODIGO_CLIENTE = p.CODIGO_CLIENTE
AND e.CODIGO_OFICINA =o.CODIGO_OFICINA ;

--5
SELECT distinct c.NOMBRE_CLIENTE ,e.NOMBRE , e.APELLIDO1,o.CIUDAD FROM CLIENTE c,EMPLEADO e,OFICINA o 
WHERE c.CODIGO_EMPLEADO_REP_VENTAS = e.CODIGO_EMPLEADO
AND e.CODIGO_OFICINA =o.CODIGO_OFICINA 
AND c.CODIGO_CLIENTE NOT IN (SELECT DISTINCT CODIGO_CLIENTE FROM pago);

--6
SELECT distinct o.LINEA_DIRECCION1 , o.LINEA_DIRECCION2 FROM OFICINA o , EMPLEADO e , CLIENTE c
WHERE o.CODIGO_OFICINA = e.CODIGO_OFICINA 
AND e.CODIGO_EMPLEADO = c.CODIGO_EMPLEADO_REP_VENTAS
AND (upper(c.CIUDAD) LIKE '%FUENLABRADA%'
OR upper(c.REGION) LIKE '%FUENLABRADA%'
OR  upper(c.LINEA_DIRECCION1) LIKE '%FUENLABRADA%'
OR upper(c.LINEA_DIRECCION2) LIKE '%FUENLABRADA%');

--7 
SELECT distinct c.NOMBRE_CLIENTE , e.NOMBRE , o.CIUDAD  FROM CLIENTE c, EMPLEADO e, OFICINA o
WHERE c.CODIGO_EMPLEADO_REP_VENTAS =e.CODIGO_EMPLEADO 
AND e.CODIGO_OFICINA =o.CODIGO_OFICINA;

--8
SELECT e.NOMBRE , e2.NOMBRE AS JEFE  FROM EMPLEADO e,EMPLEADO e2
WHERE e.CODIGO_EMPLEADO =e2.CODIGO_JEFE;

--9
SELECT distinct c.NOMBRE_CLIENTE  FROM CLIENTE c, PEDIDO p
WHERE c.CODIGO_CLIENTE =p.CODIGO_CLIENTE
AND p.FECHA_ENTREGA >p.FECHA_ESPERADA ;

--10
SELECT DISTINCT p2.GAMA 
FROM CLIENTE c,PEDIDO p , DETALLE_PEDIDO dp,PRODUCTO p2
WHERE c.CODIGO_CLIENTE = p.CODIGO_CLIENTE 
AND p.CODIGO_PEDIDO =dp.CODIGO_PEDIDO 
AND dp.CODIGO_PRODUCTO =p2.CODIGO_PRODUCTO;

--1
SELECT DISTINCT c.NOMBRE_CLIENTE  FROM CLIENTE c
WHERE c.CODIGO_CLIENTE NOT IN (SELECT DISTINCT CODIGO_CLIENTE FROM pago);

--2
SELECT NOMBRE_CLIENTE FROM cliente WHERE CODIGO_CLIENTE NOT IN (SELECT DISTINCT CODIGO_CLIENTE FROM pedido);

--3
SELECT NOMBRE_CLIENTE FROM cliente WHERE CODIGO_CLIENTE NOT IN (SELECT DISTINCT CODIGO_CLIENTE FROM pedido)
AND CODIGO_CLIENTE NOT IN (SELECT DISTINCT CODIGO_CLIENTE FROM pago);

--4 Devuelve un listado que muestre solamente los empleados que no tienen una oficina asociada.
SELECT DISTINCT E.NOMBRE
FROM EMPLEADO E,OFICINA O
WHERE E.CODIGO_OFICINA=O.CODIGO_OFICINA(+)
AND O.CODIGO_OFICINA IS NULL; 
--5 
SELECT DISTINCT E.NOMBRE
FROM EMPLEADO E, CLIENTE C
WHERE C.CODIGO_EMPLEADO_REP_VENTAS(+)=E.CODIGO_EMPLEADO
AND C.CODIGO_EMPLEADO_REP_VENTAS IS NULL;
--6 
SELECT DISTINCT E.NOMBRE
FROM EMPLEADO E,OFICINA O,CLIENTE C
WHERE E.CODIGO_OFICINA=O.CODIGO_OFICINA
AND  E.CODIGO_OFICINA=O.CODIGO_OFICINA(+)
AND O.CODIGO_OFICINA IS NULL
AND C.CODIGO_EMPLEADO_REP_VENTAS(+)=E.CODIGO_EMPLEADO
AND C.CODIGO_EMPLEADO_REP_VENTAS IS NULL;
--7 
SELECT P.NOMBRE
FROM PRODUCTO P, DETALLE_PEDIDO DP
WHERE P.CODIGO_PRODUCTO=DP.CODIGO_PRODUCTO(+)
AND DP.CODIGO_PRODUCTO IS NULL;
--8 
SELECT DISTINCT  O.CODIGO_OFICINA
FROM OFICINA O , EMPLEADO E ,CLIENTE C ,PEDIDO P ,DETALLE_PEDIDO DP,PRODUCTO PR
WHERE O.CODIGO_OFICINA=E.CODIGO_OFICINA
AND E.CODIGO_EMPLEADO=C.CODIGO_EMPLEADO_REP_VENTAS
AND C.CODIGO_CLIENTE=P.CODIGO_CLIENTE
AND P.CODIGO_PEDIDO=DP.CODIGO_PEDIDO
AND DP.CODIGO_PRODUCTO=PR.CODIGO_PRODUCTO
AND UPPER(PR.GAMA) LIKE 'FRUTALES';
--9 
SELECT DISTINCT C.NOMBRE_CLIENTE
FROM CLIENTE C,PAGO PA,PEDIDO P
WHERE C.CODIGO_CLIENTE=P.CODIGO_CLIENTE
AND C.CODIGO_CLIENTE=PA.CODIGO_CLIENTE(+)
AND PA.CODIGO_CLIENTE IS NULL;
--10 
SELECT E.NOMBRE,C.NOMBRE_CONTACTO
FROM EMPLEADO E , CLIENTE C,EMPLEADO e2 
WHERE E.CODIGO_EMPLEADO=C.CODIGO_EMPLEADO_REP_VENTAS(+)
AND E.CODIGO_EMPLEADO =e2.CODIGO_JEFE 
AND C.CODIGO_EMPLEADO_REP_VENTAS IS NULL;

-- Consultas resumen
--1
SELECT count(codigo_empleado) 
FROM EMPLEADO e  ;

--2
SELECT pais,count(DISTINCT CODIGO_CLIENTE) FROM CLIENTE c 
GROUP BY pais;

--3
SELECT round(avg(nvl(TOTAL,0)),2) FROM PAGO p
WHERE EXTRACT(YEAR FROM fecha_pago)=2009;

--4
SELECT estado,count(CODIGO_PEDIDO) FROM PEDIDO p
GROUP BY estado
ORDER BY count(CODIGO_PEDIDO) DESC;

--5
SELECT min(nvl(PRECIO_VENTA,0)) AS precioMinimo,max(nvl(PRECIO_VENTA,0)) AS precioMaximo FROM PRODUCTO p;

--6
SELECT count(CODIGO_CLIENTE) FROM CLIENTE c ;

--7
SELECT count(DISTINCT CODIGO_CLIENTE) FROM CLIENTE c 
WHERE upper(ciudad) LIKE 'MADRID';

--8
SELECT count(DISTINCT CODIGO_CLIENTE),CIUDAD FROM CLIENTE c 
WHERE upper(ciudad) LIKE 'M%'
GROUP BY CIUDAD;
--9
SELECT e.CODIGO_EMPLEADO ,count(c.CODIGO_CLIENTE)  FROM EMPLEADO e , CLIENTE c 
WHERE e.CODIGO_EMPLEADO =c.CODIGO_EMPLEADO_REP_VENTAS 
GROUP BY e.CODIGO_EMPLEADO ;

--10
SELECT COUNT(C.NOMBRE_CLIENTE)
FROM CLIENTE C
WHERE C.CODIGO_EMPLEADO_REP_VENTAS IS NULL;

--11
SELECT CODIGO_CLIENTE , min(FECHA_PAGO),max(FECHA_PAGO) FROM pago 
GROUP BY CODIGO_CLIENTE ;

--12
SELECT CODIGO_PEDIDO ,count(DISTINCT CODIGO_PRODUCTO) FROM DETALLE_PEDIDO dp
GROUP BY CODIGO_PEDIDO ;

--13
SELECT CODIGO_PEDIDO ,sum(nvl(CANTIDAD,0)) FROM DETALLE_PEDIDO dp
GROUP BY CODIGO_PEDIDO ;

--14
SELECT * FROM (SELECT sum(dp.cantidad) FROM DETALLE_PEDIDO dp
				GROUP BY dp.CODIGO_PRODUCTO
				ORDER BY sum(dp.cantidad) DESC)
WHERE rownum<=20;
--15
SELECT SUM(DP.PRECIO_UNIDAD*DP.CANTIDAD)  AS BASE_IMPONIBLE,(SUM(DP.PRECIO_UNIDAD*DP.CANTIDAD))*0.21+ SUM(DP.PRECIO_UNIDAD*DP.CANTIDAD)  AS IVA 
FROM DETALLE_PEDIDO DP;

--16
SELECT SUM(DP.PRECIO_UNIDAD*DP.CANTIDAD)  AS BASE_IMPONIBLE,(SUM(DP.PRECIO_UNIDAD*DP.CANTIDAD))*0.21+ SUM(DP.PRECIO_UNIDAD*DP.CANTIDAD)  AS IVA 
FROM DETALLE_PEDIDO DP
ORDER BY CODIGO_PRODUCTO ;

--17
SELECT SUM(DP.PRECIO_UNIDAD*DP.CANTIDAD)  AS BASE_IMPONIBLE,(SUM(DP.PRECIO_UNIDAD*DP.CANTIDAD))*0.21+ SUM(DP.PRECIO_UNIDAD*DP.CANTIDAD)  AS IVA
FROM DETALLE_PEDIDO DP
WHERE UPPER(DP.CODIGO_PRODUCTO) LIKE 'OR%'
GROUP BY DP.CODIGO_PRODUCTO;

--18
SELECT COUNT(DP.CANTIDAD), P.NOMBRE ,(SUM(DP.PRECIO_UNIDAD*DP.CANTIDAD))*0.21+ SUM(DP.PRECIO_UNIDAD*DP.CANTIDAD) AS TOTAL_FACTURADO
FROM PRODUCTO P, DETALLE_PEDIDO DP
WHERE DP.CODIGO_PRODUCTO=P.CODIGO_PRODUCTO
GROUP BY P.NOMBRE
HAVING COUNT(DP.CANTIDAD*DP.PRECIO_UNIDAD) > 3000;

--Subconsultas
--1 Devuelve el nombre del cliente con mayor límite de crédito.
SELECT NOMBRE_CLIENTE 
FROM CLIENTE
WHERE LIMITE_CREDITO = (SELECT MAX(LIMITE_CREDITO) FROM CLIENTE);
--2 Devuelve el nombre, apellido1 y cargo de los empleados que no representen a ningún cliente.
SELECT NOMBRE_CLIENTE 
FROM CLIENTE c 
WHERE CODIGO_EMPLEADO_REP_VENTAS  =(SELECT e.CODIGO_EMPLEADO FROM EMPLEADO e WHERE CODIGO_JEFE IS NULL);
--3 Devuelve el nombre del producto que tenga el precio de venta más caro.
SELECT NOMBRE 
FROM PRODUCTO 
WHERE PRECIO_VENTA=(SELECT MAX(PRECIO_VENTA) FROM PRODUCTO);
--4 Devuelve el nombre del producto del que se han vendido más unidades. 
--(Ten en cuenta que tendrás que calcular cuál es el número total de unidades 
--que se han vendido de cada producto a partir de los datos de la tabla detalle_pedido.
-- Una vez que sepas cuál es el código del producto, puedes obtener su nombre fácilmente.)
SELECT p.NOMBRE FROM PRODUCTO p , (SELECT CODIGO_PRODUCTO FROM DETALLE_PEDIDO dp 
							GROUP BY CODIGO_PRODUCTO
							ORDER BY sum(CANTIDAD) desc) c
WHERE p.CODIGO_PRODUCTO =c.CODIGO_PRODUCTO
AND ROWNUM=1;

--5 Los clientes cuyo límite de crédito sea mayor que los pagos que haya realizado.
--para que sea el mismo cliente hay que unir las 2 tablas
SELECT NOMBRE_CLIENTE FROM CLIENTE c
WHERE LIMITE_CREDITO > (SELECT sum(total) FROM PAGO p WHERE p.CODIGO_CLIENTE=c.CODIGO_CLIENTE);	
--6 El producto que más unidades tiene en stock y el que menos unidades tiene.
SELECT NOMBRE
FROM PRODUCTO
WHERE CANTIDAD_EN_STOCK = (SELECT MAX(CANTIDAD_EN_STOCK) FROM PRODUCTO)
OR CANTIDAD_EN_STOCK = (SELECT Min(CANTIDAD_EN_STOCK) FROM PRODUCTO);
--7 Devuelve el nombre, los apellidos y el email de los empleados a cargo de Alberto Soria.
SELECT e.NOMBRE , e.APELLIDO1 ,e.APELLIDO2,e.EMAIL  FROM EMPLEADO e
WHERE e.CODIGO_JEFE = (SELECT e.CODIGO_EMPLEADO 
						FROM EMPLEADO e 
						WHERE upper(NOMBRE) LIKE 'ALBERTO' AND upper(e.APELLIDO1) LIKE 'SORIA');

--Consultas variadas
--1	Devuelve el listado de clientes indicando el nombre del cliente y cuántos pedidos ha realizado. 
--Tenga en cuenta que pueden existir clientes que no han realizado ningún pedido.
SELECT c.NOMBRE_CLIENTE , count(p.CODIGO_PEDIDO) FROM CLIENTE c , PEDIDO p
WHERE c.CODIGO_CLIENTE=p.CODIGO_CLIENTE(+)
GROUP BY c.NOMBRE_CLIENTE;
--2	Devuelve un listado con los nombres de los clientes y el total pagado por cada uno de ellos. 
--Tenga en cuenta que pueden existir clientes que no han realizado ningún pago.
SELECT c.NOMBRE_CLIENTE , sum(nvl(p.TOTAL,0)) FROM CLIENTE c , PAGO p 
WHERE c.CODIGO_CLIENTE = p.CODIGO_CLIENTE(+)
GROUP BY c.NOMBRE_CLIENTE;
--3	Devuelve el nombre de los clientes que hayan hecho pedidos en 2008 ordenados alfabéticamente 
--de menor a mayor.
SELECT DISTINCT c.NOMBRE_CLIENTE FROM CLIENTE c, PEDIDO p
WHERE c.CODIGO_CLIENTE =p.CODIGO_CLIENTE
AND EXTRACT(YEAR FROM p.FECHA_PEDIDO )=2008
ORDER BY c.NOMBRE_CLIENTE;
--4	Devuelve el nombre del cliente, el nombre y primer apellido de su representante de ventas 
--y el número de teléfono de la oficina del representante de ventas, 
--de aquellos clientes que no hayan realizado ningún pago.
SELECT c.NOMBRE_CLIENTE ,e.NOMBRE , o.TELEFONO FROM CLIENTE c , EMPLEADO e,OFICINA o
WHERE c.CODIGO_EMPLEADO_REP_VENTAS  =e.CODIGO_EMPLEADO 
AND e.CODIGO_OFICINA =o.CODIGO_OFICINA
AND c.CODIGO_CLIENTE NOT IN (SELECT p.CODIGO_CLIENTE FROM PAGO p);

--5	Devuelve el listado de clientes donde aparezca el nombre del cliente, 
--el nombre y primer apellido de su representante de ventas y la ciudad donde esta? su oficina.
SELECT DISTINCT  c.NOMBRE_CLIENTE ,e.NOMBRE , o.CIUDAD FROM CLIENTE c , EMPLEADO e,OFICINA o
WHERE c.CODIGO_EMPLEADO_REP_VENTAS  =e.CODIGO_EMPLEADO 
AND e.CODIGO_OFICINA =o.CODIGO_OFICINA;

--6	Devuelve el nombre, apellidos, puesto y teléfono de la oficina de aquellos empleados 
--que no sean representante de ventas de ningún cliente.
SELECT e.NOMBRE ,e.APELLIDO1 ,e.APELLIDO2 , e.PUESTO , o.TELEFONO FROM EMPLEADO e,OFICINA o
WHERE e.CODIGO_OFICINA = o.CODIGO_OFICINA 
AND e.CODIGO_EMPLEADO NOT IN (SELECT c.CODIGO_EMPLEADO_REP_VENTAS FROM CLIENTE c);

--7	Devuelve un listado indicando todas las ciudades donde hay oficinas y el número de empleados que tiene.
SELECT o.CIUDAD , count(e.CODIGO_EMPLEADO )FROM OFICINA o , EMPLEADO e
WHERE o.CODIGO_OFICINA =e.CODIGO_OFICINA
GROUP BY o.CIUDAD;